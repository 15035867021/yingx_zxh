<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baizhi.dao.CategoryDao">
    <!--查所有类别   一级  二级类别-->
    <resultMap id="queryCategory" type="Category">
        <!--主属性-->
        <id column="cid" property="id"/>
        <!--普通属性-->
        <result column="CcateName" property="cateName"/>
        <result column="cLevels" property="levels"/>
        <result column="cParentId" property="parentId"/>
        <!--一级类别下对应的是二级类别集合-->
        <collection property="categoryList" ofType="Category">
            <!--主属性-->
            <id column="sid" property="id"/>
            <!--普通属性-->
            <result column="sCateName" property="cateName"/>
            <result column="sLevels" property="levels"/>
            <result column="sParentId" property="parentId"/>
        </collection>
    </resultMap>
    <select id="queryAllCategory" resultMap="queryCategory">
        select c.id cid,c.cate_name CcateName,c.levels cLevels,c.parent_id cParentId,
                s.id sid,s.cate_name sCateName,s.levels sLevels,s.parent_id sParentId
        from yx_category c
        left join yx_category s
        on c.id = s.parent_id
        where c.levels = 1
    </select>


    <!--分页查所有一级类别-->
    <select id="queryBuPage" resultType="Category">
        select id,cate_name cateName,levels,parent_id parentId
        from yx_category
        where levels = #{levels}
        limit #{begin},#{rows}
    </select>

    <!--查一级类别下的数量-->
    <select id="queryCount" resultType="Integer" parameterType="Integer">
        select count(*)
        from yx_category
        where levels = #{levels}
    </select>

    <!--分页查所有一级类别-->
    <select id="queryBuPageSecond" resultType="Category">
        select id,cate_name cateName,levels,parent_id parentId
        from yx_category
        where levels = #{levels} and parent_id = #{id}
        limit #{begin},#{rows}
    </select>

    <!--查一级类别下二级类别的  数量-->
    <select id="count" parameterType="String" resultType="Integer">
        select count(*)
        from yx_category
        where parent_id=#{id}
    </select>

    <!--添加一级类别-->
    <insert id="add" parameterType="Category">
        insert into yx_category
        values(#{id},#{cateName},#{levels},#{parentId})
    </insert>

    <!--添加二级类别-->
    <insert id="addSecond" parameterType="Category">
        insert into yx_category
        values(#{id},#{cateName},#{levels},#{parentId})
    </insert>

    <!--查询所有一级类别-->
    <select id="selectOne" resultType="Category">
        select id,cate_name cateName,levels,parent_id parentId
        from yx_category
        where levels = #{levels}
    </select>

    <!--修改一级类别  二级类别-->
    <update id="update" parameterType="Category">
        update yx_category
        <set>
            <if test="cateName!=null">
                cate_name = #{cateName},
            </if>
            <if test="levels!=null">
                levels = #{levels},
            </if>
            <if test="parentId!=null">
                parent_id = #{parentId}
            </if>
        </set>
        where id = #{id}
    </update>

    <!--删除一级类别  二级类别-->
    <delete id="delete" parameterType="String">
        delete from yx_category
        where id = #{id}
    </delete>
</mapper>